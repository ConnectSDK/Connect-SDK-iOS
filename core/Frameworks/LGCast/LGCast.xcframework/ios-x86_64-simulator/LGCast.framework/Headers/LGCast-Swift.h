#if 0
#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
#ifndef LGCAST_SWIFT_H
#define LGCAST_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wduplicate-method-match"
#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT noexcept
#endif
#else
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT 
#endif
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_CXX_INT_DEFINED)
#define SWIFT_CXX_INT_DEFINED
namespace swift {
using Int = ptrdiff_t;
using UInt = size_t;
}
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import AVFoundation;
@import CoreFoundation;
@import CoreMedia;
@import Foundation;
@import GStreamerForLGCast;
@import ObjectiveC;
@import ReplayKit;
@import UIKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="LGCast",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)

SWIFT_CLASS("_TtC6LGCast12CameraDevice")
@interface CameraDevice : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class AVCaptureOutput;
@class AVCaptureConnection;

@interface CameraDevice (SWIFT_EXTENSION(LGCast)) <AVCaptureAudioDataOutputSampleBufferDelegate, AVCaptureVideoDataOutputSampleBufferDelegate>
- (void)captureOutput:(AVCaptureOutput * _Nonnull)output didOutputSampleBuffer:(CMSampleBufferRef _Nonnull)sampleBuffer fromConnection:(AVCaptureConnection * _Nonnull)connection;
@end


SWIFT_CLASS("_TtC6LGCast13CameraService")
@interface CameraService : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




@class NSString;
@protocol LGCastCameraApiDelegate;
@class UIView;
@class LGCastCameraPreviewView;
@class LGCastSecurityKey;
@class LGCastCameraParameterInfo;
enum LGCastCameraProperty : NSInteger;
@class LGCastDeviceSettings;
@class LGCastCameraResolutionInfo;
enum LGCastCameraPosition : NSInteger;

SWIFT_CLASS("_TtC6LGCast15LGCastCameraApi")
@interface LGCastCameraApi : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull KEY_CAMERA_POSITION;)
+ (NSString * _Nonnull)KEY_CAMERA_POSITION SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull KEY_PREVIEW_VIDEO_GRAVITY;)
+ (NSString * _Nonnull)KEY_PREVIEW_VIDEO_GRAVITY SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull KEY_IS_SUPPORT_LANDSCAPE_MODE;)
+ (NSString * _Nonnull)KEY_IS_SUPPORT_LANDSCAPE_MODE SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LGCastCameraApi * _Nonnull shared;)
+ (LGCastCameraApi * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, weak) id <LGCastCameraApiDelegate> _Nullable delegate;
@property (nonatomic, readonly) BOOL isRunning;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (BOOL)isSupportedOsVersion SWIFT_WARN_UNUSED_RESULT;
- (UIView * _Nonnull)createCameraPreviewView:(NSDictionary<NSString *, id> * _Nullable)options SWIFT_WARN_UNUSED_RESULT;
- (void)setPreviewView:(LGCastCameraPreviewView * _Nonnull)view options:(NSDictionary<NSString *, id> * _Nullable)options;
- (NSArray<LGCastSecurityKey *> * _Nullable)generateCameraMasterKey:(NSString * _Nonnull)publicKey SWIFT_WARN_UNUSED_RESULT;
- (LGCastCameraParameterInfo * _Nullable)getCameraProperties SWIFT_WARN_UNUSED_RESULT;
- (BOOL)setCameraPropertiesWithProperty:(enum LGCastCameraProperty)property value:(NSInteger)value SWIFT_WARN_UNUSED_RESULT;
- (void)startRemoteCamera:(LGCastDeviceSettings * _Nonnull)settings;
- (void)stopRemoteCamera;
- (NSArray<LGCastCameraResolutionInfo *> * _Nonnull)getSupportedResolutions SWIFT_WARN_UNUSED_RESULT;
- (LGCastCameraResolutionInfo * _Nonnull)getCurrentResolution SWIFT_WARN_UNUSED_RESULT;
- (BOOL)setResolution:(LGCastCameraResolutionInfo * _Nonnull)resolution SWIFT_WARN_UNUSED_RESULT;
- (BOOL)changeCameraPosition:(enum LGCastCameraPosition)position SWIFT_WARN_UNUSED_RESULT;
- (BOOL)muteMicrophone:(BOOL)isMuted SWIFT_WARN_UNUSED_RESULT;
@end


enum LGCastCameraError : NSInteger;

SWIFT_PROTOCOL("_TtP6LGCast23LGCastCameraApiDelegate_")
@protocol LGCastCameraApiDelegate
- (void)lgcastCameraDidPlay;
- (void)lgcastCameraDidChangeWithProperty:(enum LGCastCameraProperty)property;
- (void)lgcastCameraErrorDidOccurWithError:(enum LGCastCameraError)error;
@end

typedef SWIFT_ENUM(NSInteger, LGCastCameraError, open) {
  LGCastCameraErrorUnknown = 0,
  LGCastCameraErrorConnectionClosed = 1,
  LGCastCameraErrorDeviceShutdown = 2,
  LGCastCameraErrorRendererTerminated = 3,
};

enum LGCastCamperaPropertyStatus : NSInteger;

SWIFT_CLASS("_TtC6LGCast25LGCastCameraParameterInfo")
@interface LGCastCameraParameterInfo : NSObject
@property (nonatomic) enum LGCastCamperaPropertyStatus audio;
@property (nonatomic) enum LGCastCamperaPropertyStatus autoWhiteBalance;
@property (nonatomic) NSInteger brightness;
@property (nonatomic) NSInteger width;
@property (nonatomic) NSInteger height;
@property (nonatomic) enum LGCastCameraPosition facing;
@property (nonatomic) NSInteger whiteBalance;
@property (nonatomic) NSInteger rotation;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, LGCastCameraPosition, open) {
  LGCastCameraPositionFront = 0,
  LGCastCameraPositionBack = 1,
};

typedef SWIFT_ENUM(NSInteger, LGCastCameraPreviewVideoGravity, open) {
  LGCastCameraPreviewVideoGravityResize = 0,
  LGCastCameraPreviewVideoGravityResizeAspect = 1,
  LGCastCameraPreviewVideoGravityResizeAspectFill = 2,
};

@class NSCoder;

SWIFT_CLASS("_TtC6LGCast23LGCastCameraPreviewView")
@interface LGCastCameraPreviewView : UIView
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) Class _Nonnull layerClass;)
+ (Class _Nonnull)layerClass SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, LGCastCameraProperty, open) {
  LGCastCameraPropertyAudio = 0,
  LGCastCameraPropertyAutoWhiteBalance = 1,
  LGCastCameraPropertyBrightness = 2,
  LGCastCameraPropertyFacing = 3,
  LGCastCameraPropertyResolution = 4,
  LGCastCameraPropertyWhitebalance = 5,
  LGCastCameraPropertyRotation = 6,
};

typedef SWIFT_ENUM(NSInteger, LGCastCameraResolution, open) {
  LGCastCameraResolutionLow = 0,
  LGCastCameraResolutionMedium = 1,
  LGCastCameraResolutionHigh = 2,
  LGCastCameraResolutionCif352x288 = 3,
  LGCastCameraResolutionVga640x480 = 4,
  LGCastCameraResolutionHd1280x720 = 5,
  LGCastCameraResolutionHd1920x1080 = 6,
  LGCastCameraResolutionHd4K3840x2160 = 7,
  LGCastCameraResolutionIFrame960x540 = 8,
  LGCastCameraResolutionIFrame1280x720 = 9,
};


SWIFT_CLASS("_TtC6LGCast26LGCastCameraResolutionInfo")
@interface LGCastCameraResolutionInfo : NSObject
@property (nonatomic) NSInteger width;
@property (nonatomic) NSInteger height;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, LGCastCamperaPropertyStatus, open) {
  LGCastCamperaPropertyStatusDisable = 0,
  LGCastCamperaPropertyStatusEnable = 1,
};


SWIFT_CLASS("_TtC6LGCast20LGCastDeviceSettings")
@interface LGCastDeviceSettings : NSObject
@property (nonatomic, copy) NSString * _Nullable host;
@property (nonatomic) NSInteger audioPort;
@property (nonatomic) NSInteger videoPort;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol LGCastMirroringApiDelegate;
@class LGCastMirroringMediaSettings;
@class LGCastMirroringInfo;

SWIFT_CLASS("_TtC6LGCast18LGCastMirroringApi")
@interface LGCastMirroringApi : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) LGCastMirroringApi * _Nonnull shared;)
+ (LGCastMirroringApi * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (BOOL)isSupportedOsVersion SWIFT_WARN_UNUSED_RESULT;
- (void)setDelegate:(id <LGCastMirroringApiDelegate> _Nonnull)delegate;
- (LGCastMirroringInfo * _Nullable)setMediaSettings:(LGCastMirroringMediaSettings * _Nullable)mediaInfo SWIFT_WARN_UNUSED_RESULT;
- (NSArray<LGCastSecurityKey *> * _Nullable)generateMirroringMasterKey:(NSString * _Nonnull)publicKey SWIFT_WARN_UNUSED_RESULT;
- (void)startMirroring:(LGCastDeviceSettings * _Nullable)settings;
- (LGCastMirroringInfo * _Nullable)updateDisplayOrientationWithIsPortraitMode:(BOOL)isPortraitMode SWIFT_WARN_UNUSED_RESULT;
- (void)stopMirroring;
- (void)pushSampleBuffer:(CMSampleBufferRef _Nonnull)sampleBuffer with:(RPSampleBufferType)sampleBufferType;
@end


enum LGCastMirroringError : NSInteger;
enum LGCastMirroringEvent : NSInteger;

SWIFT_PROTOCOL("_TtP6LGCast26LGCastMirroringApiDelegate_")
@protocol LGCastMirroringApiDelegate
- (void)lgcastMirroringDidStartWithResult:(BOOL)result;
- (void)lgcastMirroringDidStopWithResult:(BOOL)result;
- (void)lgcastMirroringErrorDidOccurWithError:(enum LGCastMirroringError)error;
- (void)lgcastMirroringUpdateEventWithEvent:(enum LGCastMirroringEvent)event info:(LGCastMirroringInfo * _Nullable)info;
@end

enum MTAudioType : int32_t;
@class NSData;

SWIFT_CLASS("_TtC6LGCast24LGCastMirroringAudioInfo")
@interface LGCastMirroringAudioInfo : NSObject
@property (nonatomic) enum MTAudioType type;
@property (nonatomic, readonly, copy) NSString * _Nonnull codec;
@property (nonatomic) NSInteger samplingRate;
@property (nonatomic) NSInteger channelCnt;
@property (nonatomic) NSInteger bitrate;
@property (nonatomic, copy) NSString * _Nonnull streamMuxConfig;
@property (nonatomic, copy) NSData * _Nullable codecData;
@property (nonatomic, copy) NSString * _Nullable host;
@property (nonatomic) NSInteger port;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6LGCast28LGCastMirroringAudioSettings")
@interface LGCastMirroringAudioSettings : NSObject
@property (nonatomic) NSInteger sampleRate;
@property (nonatomic) NSInteger bitrate;
@property (nonatomic) NSInteger channelCnt;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, LGCastMirroringError, open) {
  LGCastMirroringErrorUnknown = 0,
  LGCastMirroringErrorConnectionClosed = 1,
  LGCastMirroringErrorDeviceShutdown = 2,
  LGCastMirroringErrorRendererTerminated = 3,
};

typedef SWIFT_ENUM(NSInteger, LGCastMirroringEvent, open) {
  LGCastMirroringEventUnknown = 0,
  LGCastMirroringEventUpdateVideoInfo = 1,
  LGCastMirroringEventUpdateVideoVideoSize = 2,
  LGCastMirroringEventUpdateAudioInfo = 3,
  LGCastMirroringEventUpdatePlayerInfo = 4,
};

@class LGCastMirroringVideoInfo;
@class LGCastMirroringPlayerInfo;

SWIFT_CLASS("_TtC6LGCast19LGCastMirroringInfo")
@interface LGCastMirroringInfo : NSObject
@property (nonatomic, strong) LGCastMirroringAudioInfo * _Nullable audioInfo;
@property (nonatomic, strong) LGCastMirroringVideoInfo * _Nullable videoInfo;
@property (nonatomic, strong) LGCastMirroringPlayerInfo * _Nullable playerInfo;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class LGCastMirroringVideoSettings;

SWIFT_CLASS("_TtC6LGCast28LGCastMirroringMediaSettings")
@interface LGCastMirroringMediaSettings : NSObject
@property (nonatomic, strong) LGCastMirroringAudioSettings * _Nullable audio;
@property (nonatomic, strong) LGCastMirroringVideoSettings * _Nullable video;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6LGCast25LGCastMirroringPlayerInfo")
@interface LGCastMirroringPlayerInfo : NSObject
@property (nonatomic) NSInteger width;
@property (nonatomic) NSInteger height;
@property (nonatomic) BOOL isPortraitMode;
@property (nonatomic, copy) NSString * _Nonnull ipAddress;
@property (nonatomic) NSInteger audioPort;
@property (nonatomic) NSInteger videoPort;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum MTVideoType : int32_t;

SWIFT_CLASS("_TtC6LGCast24LGCastMirroringVideoInfo")
@interface LGCastMirroringVideoInfo : NSObject
@property (nonatomic) enum MTVideoType type;
@property (nonatomic, readonly, copy) NSString * _Nonnull codec;
@property (nonatomic) NSInteger width;
@property (nonatomic) NSInteger height;
@property (nonatomic) NSInteger activeWidth;
@property (nonatomic) NSInteger activeHeight;
@property (nonatomic) NSInteger framerate;
@property (nonatomic) NSInteger samplingRate;
@property (nonatomic) NSInteger bitrate;
@property (nonatomic, copy) NSString * _Nonnull supportOrientation;
@property (nonatomic) BOOL isPortraitMode;
@property (nonatomic, copy) NSString * _Nonnull screenOrientation;
@property (nonatomic, copy) NSString * _Nullable streamMuxConfig;
@property (nonatomic, copy) NSData * _Nullable codecData;
@property (nonatomic, copy) NSString * _Nullable host;
@property (nonatomic) NSInteger port;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6LGCast28LGCastMirroringVideoSettings")
@interface LGCastMirroringVideoSettings : NSObject
@property (nonatomic) NSInteger width;
@property (nonatomic) NSInteger height;
@property (nonatomic) BOOL isPortraitMode;
@property (nonatomic) NSInteger framerate;
@property (nonatomic) NSInteger bitrate;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6LGCast17LGCastSecurityKey")
@interface LGCastSecurityKey : NSObject
@property (nonatomic, copy) NSString * _Nullable masterKey;
@property (nonatomic, copy) NSString * _Nullable mki;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6LGCast3Log")
@interface Log : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, LogLevel, closed) {
  LogLevelDebug = 0,
  LogLevelInfo = 1,
  LogLevelNotice = 2,
  LogLevelError = 3,
  LogLevelFault = 4,
};


@interface Log (SWIFT_EXTENSION(LGCast))
+ (void)debugLGCast:(NSString * _Nonnull)message;
+ (void)infoLGCast:(NSString * _Nonnull)message;
+ (void)noticeLGCast:(NSString * _Nonnull)message;
+ (void)errorLGCast:(NSString * _Nonnull)message;
+ (void)faultLGCast:(NSString * _Nonnull)message;
@end



SWIFT_CLASS("_TtC6LGCast11MTAudioInfo")
@interface MTAudioInfo : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(int32_t, MTAudioType, open) {
  MTAudioTypePcm = 0,
  MTAudioTypeAac = 1,
};


SWIFT_CLASS("_TtC6LGCast11MTMediaInfo")
@interface MTMediaInfo : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6LGCast13MTRTPSecurity")
@interface MTRTPSecurity : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6LGCast16MTRTPSecurityKey")
@interface MTRTPSecurityKey : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6LGCast11MTVideoInfo")
@interface MTVideoInfo : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(int32_t, MTVideoType, open) {
  MTVideoTypeRaw = 0,
  MTVideoTypeH264 = 1,
  MTVideoTypeMjpeg = 2,
};


SWIFT_CLASS("_TtC6LGCast16MirroringService")
@interface MirroringService : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS("_TtC6LGCast15MirroringVolume")
@interface MirroringVolume : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6LGCast11RTPStreamer")
@interface RTPStreamer : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface RTPStreamer (SWIFT_EXTENSION(LGCast)) <LCStreamerDelegate>
- (void)gstreamerDidInitialize;
- (void)gstreamerDidSendMessage:(NSString * _Null_unspecified)message;
@end


SWIFT_CLASS("_TtC6LGCast16RTPStreamerUtils")
@interface RTPStreamerUtils : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC6LGCast12RTPStreaming")
@interface RTPStreaming : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS("_TtC6LGCast12VideoEncoder")
@interface VideoEncoder : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
